scriptloc <- dirname(rstudioapi::getActiveDocumentContext()$path) # Get location of this script
setwd(scriptloc)
# load deleteome_tools.R script
source(paste0(scriptloc, "/deleteome_tools.R")) # Assumes that deleteome_tools.R is in same directory as this file
scriptloc <- dirname(rstudioapi::getActiveDocumentContext()$path) # Get location of this script
setwd(scriptloc)
# load deleteome_tools.R script
source(paste0(scriptloc, "/deleteome_tools.R")) # Assumes that deleteome_tools.R is in same directory as this file
scriptloc <- dirname(rstudioapi::getActiveDocumentContext()$path) # Get location of this script
setwd(scriptloc)
# load deleteome_tools.R script
source(paste0(scriptloc, "/deleteome_tools.R")) # Assumes that deleteome_tools.R is in same directory as this file
alldata <- getDeleteomeExpData() # Load all the deleteome expression data
library(ggplot2)
library(org.Sc.sgd.db)
library(org.Sc.sgd.db)
library(org.Sc.sgd.db)
library(gplots)
library(ggplot2)
library(BiocManager)
thedir <- getwd() # Location of this script (assumes that working directory is the folder containing this script)
if (!requireNamespace("BiocManager", quietly = TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("org.Sc.sgd.db")
library(org.Sc.sgd.db)
mutantname <- "nup60" # The tool will find mutant strains transcriptionally similar to the strain specified here
Mthresh <- 0.0 # log2 fold-change cutoff for identifying differentially-expressed genes in deletion strain
pDEGs <- 0.05 # p-value cutoff for identifying differentially-expressed genes in deletion strain
pCor <- 0.05  # p-value cutoff for identifying statistically-significant correlation tests
pCor <- 0.05  # p-value cutoff for identifying statistically-significant correlation tests
pCor <- 0.05  # p-value cutoff for identifying statistically-significant correlation tests
pCor <- 0.05  # p-value cutoff for identifying statistically-significant correlation tests
qthresh <- 0.05 # quantile cutoff for selecting similar deletion strains
# Find similar strains in Deleteome
matchingStrains <- getDeleteomeMatchesByReciprocalCorrelation(delData = alldata,
mutant=mutantname,
minAbsLog2FC = Mthresh,
pDEGs = pDEGs,
pCor = pCor,
quantileCutoff = qthresh
)
# Show correlated mutants
message("\nSimilar mutant strains:")
print(matchingStrains)
# Generate heatmap for significantly correlated deleteome mutants
# First get a data frame that contains all the log2 fold-change and p-value info for the mutant strain (AKA its "profile")
mutantProfile <- getProfileForDeletion(delData = alldata,
deletionname = mutantname,
Mthresh = Mthresh,
pDEGs = pDEGs)
# Generate heatmap for significantly similar deleteome profiles
hm1 <- makeHeatmapDeleteomeMatches(mutantname = mutantname,
mutantProfile,
matchingStrains,
fileprefix = "Corr_matches",
titledesc="transcriptional similarity (reciprocal correlation)",
MthreshForTitle = Mthresh,
pDEGsForTitle = pDEGs,
pMatchesForTitle = pCor,
quantileForTitle = qthresh,
printToFile = T)
